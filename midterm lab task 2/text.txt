-text

let
    Source = Csv.Document(File.Contents("C:\Users\COMLAB\Downloads\Uncleaned_DS_jobs.csv"),[Delimiter=",", Columns=15, Encoding=1252, QuoteStyle=QuoteStyle.Csv]),
    #"Promoted Headers" = Table.PromoteHeaders(Source, [PromoteAllScalars=true]),
    #"Changed Type" = Table.TransformColumnTypes(#"Promoted Headers",{{"index", Int64.Type}, {"Job Title", type text}, {"Salary Estimate", type text}, {"Job Description", type text}, {"Rating", type number}, {"Company Name", type text}, {"Location", type text}, {"Headquarters", type text}, {"Size", type text}, {"Founded", Int64.Type}, {"Type of ownership", type text}, {"Industry", type text}, {"Sector", type text}, {"Revenue", type text}, {"Competitors", type text}}),
    #"Extracted Text Before Delimiter" = Table.TransformColumns(#"Changed Type", {{"Salary Estimate", each Text.BeforeDelimiter(_, "("), type text}}),
    #"Sorted Rows" = Table.Sort(#"Extracted Text Before Delimiter",{{"Salary Estimate", Order.Ascending}}),
    #"Inserted Text Between Delimiters" = Table.AddColumn(#"Sorted Rows", "Text Between Delimiters", each Text.BetweenDelimiters([Salary Estimate], "$", "K"), type text),
    #"Renamed Columns" = Table.RenameColumns(#"Inserted Text Between Delimiters",{{"Text Between Delimiters", "Min Sal"}}),
    #"Inserted Text Between Delimiters1" = Table.AddColumn(#"Renamed Columns", "Text Between Delimiters", each Text.BetweenDelimiters([Salary Estimate], "$", "K", 1, 0), type text),
    #"Renamed Columns1" = Table.RenameColumns(#"Inserted Text Between Delimiters1",{{"Text Between Delimiters", "Max Sal"}}),
    #"Added Custom" = Table.AddColumn(#"Renamed Columns1", "Role Type", each if Text.Contains([Job Title], "Data Scientist") then
"Data Scientist"
else if Text.Contains([Job Title], "Data Analyst") then
"Data Analyst"

else if Text.Contains([Job Title], "Data Engineer") then
"Data Engineer"
else if Text.Contains([Job Title], "Machine Learning") then
"Machine Learning Engineer"
else
"other"),
    #"Added Custom1" = Table.AddColumn(#"Added Custom", "Location-2", each if [Location]= "New Jersey" then ", NJ"
else if [Location] = "Remote" then ", other"
else if [Location]= "United States" then ", other"
else if [Location]= "Texas" then ", TX"
else if [Location]= "Patuxent" then ", MA"
else if [Location]= "California" then ", CA"
else if [Location]= "Utah" then ", UT"
else [Location]),
    #"Split Column by Delimiter" = Table.SplitColumn(#"Added Custom1", "Location-2", Splitter.SplitTextByDelimiter(",", QuoteStyle.Csv), {"Location-2.1", "Location-2.2"}),
    #"Changed Type1" = Table.TransformColumnTypes(#"Split Column by Delimiter",{{"Location-2.1", type text}, {"Location-2.2", type text}}),
    #"Renamed Columns2" = Table.RenameColumns(#"Changed Type1",{{"Location-2.2", "Location Correction-2(State Abbreviations)"}}),
    #"Inserted Text Before Delimiter" = Table.AddColumn(#"Renamed Columns2", "Text Before Delimiter", each Text.BeforeDelimiter([Size], " "), type text),
    #"Renamed Columns3" = Table.RenameColumns(#"Inserted Text Before Delimiter",{{"Text Before Delimiter", "MinCompanySize"}}),
    #"Inserted Text Between Delimiters2" = Table.AddColumn(#"Renamed Columns3", "MaxCompanySize", each Text.BetweenDelimiters([Size], " ", " ", 1, 0), type text),
    #"Replaced Value1" = Table.ReplaceValue(#"Inserted Text Between Delimiters2","Anne Arundel","MA",Replacer.ReplaceText,{"Location Correction-2(State Abbreviations)"}),
    #"Split Column by Delimiter1" = Table.SplitColumn(#"Replaced Value1", "Size", Splitter.SplitTextByDelimiter("employees", QuoteStyle.Csv), {"Size.1", "Size.2"}),
    #"Changed Type2" = Table.TransformColumnTypes(#"Split Column by Delimiter1",{{"Size.1", type text}, {"Size.2", type text}}),
    #"Removed Columns" = Table.RemoveColumns(#"Changed Type2",{"Size.2"}),
    #"Replaced Value" = Table.ReplaceValue(#"Removed Columns","-1","N/A",Replacer.ReplaceText,{"Competitors"}),
    #"Replaced Value2" = Table.ReplaceValue(#"Replaced Value","-1","0",Replacer.ReplaceText,{"Revenue"}),
    #"Replaced Value3" = Table.ReplaceValue(#"Replaced Value2","-1","other",Replacer.ReplaceText,{"Industry"}),
    #"Renamed Columns4" = Table.RenameColumns(#"Replaced Value3",{{"Location Correction-2(State Abbreviations)", "State Abbreviations"}}),
    #"Split Column by Position" = Table.SplitColumn(#"Renamed Columns4", "Company Name", Splitter.SplitTextByPositions({0, 3}, true), {"Company Name.1", "Company Name.2"}),
    #"Changed Type3" = Table.TransformColumnTypes(#"Split Column by Position",{{"Company Name.1", type text}, {"Company Name.2", type text}}),
    #"Removed Columns1" = Table.RemoveColumns(#"Changed Type3",{"Company Name.2"}),
    #"Removed Other Columns" = Table.SelectColumns(#"Removed Columns1",{"Min Sal", "Max Sal", "Role Type"}),
    #"Changed Type4" = Table.TransformColumnTypes(#"Removed Other Columns",{{"Max Sal", Currency.Type}, {"Min Sal", Currency.Type}}),
    #"Multiplied Column" = Table.TransformColumns(#"Changed Type4", {{"Min Sal", each _ * 100, Currency.Type}}),
    #"Multiplied Column1" = Table.TransformColumns(#"Multiplied Column", {{"Max Sal", each _ * 100, Currency.Type}}),
    #"Multiplied Column2" = Table.TransformColumns(#"Multiplied Column1", {{"Min Sal", each _ * 1000, Currency.Type}}),
    #"Multiplied Column3" = Table.TransformColumns(#"Multiplied Column2", {{"Max Sal", each _ * 1000, Currency.Type}}),
    #"Grouped Rows" = Table.Group(#"Multiplied Column3", {"Role Type"}, {{"Count", each Table.RowCount(_), type number}, {"All rows", each _, type table}, {"Avg Min Sal", each List.Average([Min Sal]), type number}, {"Avg Max Sal", each List.Average([Max Sal]), type number}})
in
    #"Grouped Rows"
